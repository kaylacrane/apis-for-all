{"version":3,"sources":["components/Home.js","components/Header.js","services/getCatFacts.js","components/Cats.js","services/getQuotes.js","components/reusables/filters/SearchByText.js","components/ResultsList.js","components/Quotes.js","services/getAvatars.js","components/reusables/filters/SearchByDropDown.js","components/reusables/editor-options/ColorPicker.js","components/reusables/editor-options/Slider.js","components/reusables/Editor.js","components/Avatars.js","components/App.js","index.js"],"names":["Home","Header","to","getCatFacts","fetch","then","response","json","Cats","useState","catFacts","setCatFacts","randomFact","setRandomFact","useEffect","data","all","randomNumber","Math","floor","random","length","text","onClick","getQuotes","quoteType","headerValue","headers","SearchByText","props","id","onChangeHandler","searchValue","placeholder","type","onChange","event","key","currentTarget","value","onKeyDown","keyCode","preventDefault","ResultsList","body","url","author","href","Quotes","quoteOfDay","setQuoteOfDay","setSearchValue","searchResults","setSearchResults","quote","displayQuoteOfTheDay","Authorization","quotes","resultsHTML","map","result","index","displayResults","getAvatars","searchText","searchType","background","SearchByDropDown","dropdownOptions","dropdownValue","labelText","htmlFor","name","ColorPicker","labelName","colorPickerValue","Slider","Editor","Avatars","avatarUrl","setAvatarUrl","setTextSearchValue","avatarTypeValue","setDropdownValue","Background","editorOptions","setEditorOptions","avatarList","substr","getSearchValue","console","log","option","className","src","alt","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"iPAUeA,MARf,WACI,OACI,2C,OCqBOC,MAtBf,WACE,OACE,gCACE,sCACA,6BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,4BACE,kBAAC,IAAD,CAAMA,GAAG,eACP,qCAEF,kBAAC,IAAD,CAAMA,GAAG,gBACP,uCAEF,kBAAC,IAAD,CAAMA,GAAG,iBACP,4C,OCbGC,MAJf,WACI,OAAOC,MAAM,wCAAwCC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,WC4BlEC,MA1Bf,WAAiB,IAAD,EACkBC,mBAAS,IAD3B,mBACPC,EADO,KACGC,EADH,OAEsBF,mBAAS,IAF/B,mBAEPG,EAFO,KAEKC,EAFL,KAiBd,OAbAC,qBAAU,WACRX,IAAcE,MAAK,SAACU,GAClBJ,EAAYI,EAAKC,KACjB,IAAMC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWL,EAAKC,IAAIK,OAAS,GAClER,EAAcE,EAAKC,IAAIC,GAAcK,WAEtC,IAQD,6BACE,wCACA,2BAAIV,GAA0B,2BAC9B,4BAAQW,QATO,WACjB,IAAMN,EAAeC,KAAKC,MAAMD,KAAKE,SAAWV,EAASW,OAAS,GAClER,EAAcH,EAASO,GAAcK,QAOnC,kBCpBSE,MAJf,SAAmBC,EAAWC,GAC1B,OAAOtB,MAAM,yBAAD,OAA0BqB,GAAY,CAACE,QAAQD,IAAcrB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WC+BxFqB,EA9BM,SAACC,GAAU,IAOtBC,EAAkDD,EAAlDC,GAAIC,EAA8CF,EAA9CE,gBAAiBC,EAA6BH,EAA7BG,YAAaC,EAAgBJ,EAAhBI,YAS1C,OACE,+BACE,2BACEC,KAAK,OACLJ,GAAIA,EACJK,SAbN,SAA8BC,GAC5BL,EAAgB,CACdM,IAAKD,EAAME,cAAcR,GACzBS,MAAOH,EAAME,cAAcC,SAWzBA,MAAOP,EACPQ,UArBN,SAAsBJ,GACE,KAAlBA,EAAMK,SACRL,EAAMM,kBAoBJT,YAAaA,MCdNU,MAVf,SAAqBd,GAAQ,IAClBe,EAAqBf,EAArBe,KAAMC,EAAehB,EAAfgB,IAAKC,EAAUjB,EAAViB,OAClB,OACI,6BACI,uBAAGC,KAAMF,GAAK,2BAAID,IAAa,oCAAUE,KCsEtCE,MAvEf,WAAmB,IAAD,EACoBvC,mBAAS,IAD7B,mBACTwC,EADS,KACGC,EADH,OAEsBzC,mBAAS,IAF/B,mBAETuB,EAFS,KAEImB,EAFJ,OAG0B1C,mBAAS,IAHnC,mBAGT2C,EAHS,KAGMC,EAHN,KAsDhB,OAlDAvC,qBAAU,WACRU,EAAU,QAAQnB,MAAK,SAACU,GACtBmC,EAAcnC,EAAKuC,YAEpB,IA+CD,6BACE,0CArCJ,WACE,GAAIL,EAAY,CAAC,IACPH,EAAsBG,EAAtBH,OAAQF,EAAcK,EAAdL,KAAMC,EAAQI,EAARJ,IACtB,OACE,oCACE,uBAAGE,KAAMF,GACP,2BAAID,IAEN,iCACK,8BAAOE,GAAe,MAK/B,OAAO,sEAwBNS,GACD,+DACA,8BACE,kBAAC,EAAD,CACEzB,GAAI,iBACJC,gBArDR,SAAwBhB,GACtBoC,EAAepC,EAAKwB,OACpBf,EAAU,kBAAD,OAAmBT,EAAKwB,OAAS,CACxCiB,cAAe,mDACdnD,MAAK,SAACU,GACPsC,EAAiBtC,EAAK0C,YAiDlBzB,YAAaA,KAGjB,6BA7BJ,WAEE,IAAI0B,EAaJ,OAZIN,IACFM,EAAcN,EAAcO,KAAI,SAACC,EAAQC,GACvC,OACE,kBAAC,EAAD,CACExB,IAAKwB,EACLf,OAAQc,EAAOd,OACfF,KAAMgB,EAAOhB,KACbC,IAAKe,EAAOf,UAKba,EAcCI,M,QCjEGC,MANf,SAAoBC,EAAYC,GAA8B,IAAlBC,EAAiB,uDAAJ,GACvD,OAAO9D,MAAM,oCAAD,OAC0B6D,EAD1B,YACwCD,EADxC,eACyDE,IACnE7D,MAAK,SAACC,GAAD,OAAcA,MCsCR6D,MAvCf,SAA0BtC,GAAO,IAG7BuC,EAKEvC,EALFuC,gBACAtC,EAIED,EAJFC,GACAC,EAGEF,EAHFE,gBACAsC,EAEExC,EAFFwC,cACAC,EACEzC,EADFyC,UAgBF,OACE,oCACE,2BAAOC,QAASzC,GAAKwC,GACrB,4BACEE,KAAM1C,EACNA,GAAIA,EACJK,SAZN,SAA8BC,GAC5BL,EAAgB,CACdM,IAAKD,EAAME,cAAcR,GACzBS,MAAOH,EAAME,cAAcC,SAWzBA,MAAO8B,GAEND,KChBMK,MAjBf,SAAqB5C,GAAQ,IACnB6C,EAAiD7C,EAAjD6C,UAAW3C,EAAsCF,EAAtCE,gBAAiB4C,EAAqB9C,EAArB8C,iBACpC,OACE,2BAAOJ,QAASG,GACbA,EACD,2BACExC,KAAK,QACLJ,GAAI4C,EACJnC,MAAOoC,EACPxC,SAAU,SAACC,GAAD,OACRL,EAAgBK,EAAME,cAAcR,GAAIM,EAAME,cAAcC,YCNvDqC,MAJf,WACE,OAAO,2BAAO1C,KAAK,WCeN2C,MAdf,SAAgBhD,GAAQ,IACdE,EAAsCF,EAAtCE,gBAAiB4C,EAAqB9C,EAArB8C,iBACzB,OACE,oCACE,kBAAC,EAAD,CACED,UAAU,aACV3C,gBAAiBA,EACjB4C,iBAAkBA,IAEpB,kBAAC,EAAD,QCoESG,MA3Ef,WAAoB,IAAD,EACiBrE,mBAAS,IAD1B,mBACVsE,EADU,KACCC,EADD,OAEyBvE,mBAAS,IAFlC,mBAEVuB,EAFU,KAEGiD,EAFH,OAG2BxE,mBAAS,SAHpC,mBAGVyE,EAHU,KAGOC,EAHP,OAIyB1E,mBAAS,CAAE2E,WAAY,YAJhD,mBAIVC,EAJU,KAIKC,EAJL,KAKXC,EAAa,CACjB,CAAEhD,MAAO,QAASjB,KAAM,SACxB,CAAEiB,MAAO,OAAQjB,KAAM,QACvB,CAAEiB,MAAO,SAAUjB,KAAM,UACzB,CAAEiB,MAAO,SAAUjB,KAAM,UACzB,CAAEiB,MAAO,YAAajB,KAAM,aAC5B,CAAEiB,MAAO,YAAajB,KAAM,aAC5B,CAAEiB,MAAO,QAASjB,KAAM,SACxB,CAAEiB,MAAO,WAAYjB,KAAM,aAE7BR,qBAAU,WACR,IAAMoD,EAAamB,EAAcD,WAAd,gBACNC,EAAcD,WAAWI,OAAO,IACzC,GAEJzB,EAAW/B,EAAakD,EAAiBhB,GAAY7D,MAAK,SAACU,GACzDiE,EAAajE,EAAK8B,UAEnB,CAACb,EAAakD,EAAiBG,IAElC,IAAMI,EAAiB,SAAC1E,GACL,iBAAbA,EAAKsB,KACP4C,EAAmBlE,EAAKwB,OAET,iBAAbxB,EAAKsB,KACP8C,EAAiBpE,EAAKwB,QAmB1B,OADAmD,QAAQC,IAAIN,GAEV,6BACE,kBAAC,EAAD,CACEvD,GAAI,eACJC,gBAAiB0D,EACjBzD,YAAaA,EACbC,YAAY,4BAEd,kBAAC,EAAD,CACEH,GAAG,eACHsC,gBAxBWmB,EAAW5B,KAAI,SAACiC,EAAQ/B,GACrC,OACE,4BAAQxB,IAAKwB,EAAOtB,MAAOqD,EAAOrD,OAC/BqD,EAAOtE,SAsBVS,gBAAiB0D,EACjBpB,cAAea,IAEjB,yBAAKW,UAAU,gBACb,yDACA,yBAAKC,IAAKf,EAAWgB,IAAI,SAASF,UAAU,YAE9C,kBAAC,EAAD,CACE9D,gBAxBmB,SAACD,EAAIS,GAC5BmD,QAAQC,IAAI7D,EAAIS,GAChB+C,EAAiB,eAAGxD,EAAKS,KAuBrBoC,iBAAkBU,EAAcD,eC5CzBY,MAtBf,WACE,OACE,yBAAKH,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,eAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,kBAChB,kBAAC,EAAD,UClBVC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.21be34b9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            Home Page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>Header</h1>\r\n      <nav>\r\n        <Link to=\"/\">Home</Link>\r\n        <ul>\r\n          <Link to=\"/apis/cats/\">\r\n            <li>Cats</li>\r\n          </Link>\r\n          <Link to=\"/apis/quotes\">\r\n            <li>Quotes</li>\r\n          </Link>\r\n          <Link to=\"/apis/avatars\">\r\n            <li>Avatars</li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","function getCatFacts() {\r\n    return fetch(\"https://cat-fact.herokuapp.com/facts\").then(response=>response.json());\r\n}\r\n\r\nexport default getCatFacts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport getCatFacts from \"../services/getCatFacts\";\r\n\r\nfunction Cats() {\r\n  const [catFacts, setCatFacts] = useState([]);\r\n  const [randomFact, setRandomFact] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getCatFacts().then((data) => {\r\n      setCatFacts(data.all);\r\n      const randomNumber = Math.floor(Math.random() * data.all.length + 1);\r\n      setRandomFact(data.all[randomNumber].text);\r\n    });\r\n  }, []);\r\n\r\n  const getNewFact = () => {\r\n    const randomNumber = Math.floor(Math.random() * catFacts.length + 1);\r\n    setRandomFact(catFacts[randomNumber].text);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Cats API</h1>\r\n      <p>{randomFact ? randomFact : \"Loading fact right meow\"}</p>\r\n      <button onClick={getNewFact}>Get new fact</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cats;\r\n","function getQuotes(quoteType, headerValue) {\r\n    return fetch(`https://favqs.com/api/${quoteType}`,{headers:headerValue}).then(response => response.json());\r\n}\r\n\r\nexport default getQuotes;\r\n","import React from \"react\";\r\n\r\nconst SearchByText = (props) => {\r\n  // console.log(props);\r\n  function preventEnter(event) {\r\n    if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  const { id, onChangeHandler, searchValue, placeholder } = props;\r\n  function onChangeHandlerChild(event) {\r\n    onChangeHandler({\r\n      key: event.currentTarget.id,\r\n      value: event.currentTarget.value,\r\n    });\r\n  }\r\n  // console.log(props);\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        type=\"text\"\r\n        id={id}\r\n        onChange={onChangeHandlerChild}\r\n        value={searchValue}\r\n        onKeyDown={preventEnter}\r\n        placeholder={placeholder}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default SearchByText;\r\n","import React from 'react';\r\n\r\nfunction ResultsList(props) {\r\n    const {body, url, author} = props;\r\n    return (\r\n        <div>\r\n            <a href={url}><p>{body}</p></a><span>By {author}</span>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultsList\r\n","import React, { useState, useEffect } from \"react\";\r\nimport getQuotes from \"../services/getQuotes\";\r\nimport SearchByText from \"./reusables/filters/SearchByText\";\r\nimport ResultsList from \"./ResultsList\";\r\n\r\nfunction Quotes() {\r\n  const [quoteOfDay, setQuoteOfDay] = useState(\"\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  useEffect(() => {\r\n    getQuotes(\"qotd\").then((data) => {\r\n      setQuoteOfDay(data.quote);\r\n    });\r\n  }, []);\r\n  function getSearchValue(data) {\r\n    setSearchValue(data.value);\r\n    getQuotes(`quotes/?filter=${data.value}`, {\r\n      Authorization: 'Token token=\"7bb3a9ac1c2ca4a4ac3e1b4d5ce77fdd\"',\r\n    }).then((data) => {\r\n      setSearchResults(data.quotes);\r\n    });\r\n    // console.log(searchResults)\r\n    // displayResults();\r\n  }\r\n  function displayQuoteOfTheDay() {\r\n    if (quoteOfDay) {\r\n      const { author, body, url } = quoteOfDay;\r\n      return (\r\n        <>\r\n          <a href={url}>\r\n            <p>{body}</p>\r\n          </a>\r\n          <p>\r\n            By <span>{author}</span>{\" \"}\r\n          </p>\r\n        </>\r\n      );\r\n    } else {\r\n      return <p>Loading Quote of the Day from FavQs.com</p>;\r\n    }\r\n  }\r\n\r\n  function displayResults() {\r\n    // console.log(searchResults);\r\n    let resultsHTML;\r\n    if (searchResults) {\r\n      resultsHTML = searchResults.map((result, index) => {\r\n        return (\r\n          <ResultsList\r\n            key={index}\r\n            author={result.author}\r\n            body={result.body}\r\n            url={result.url}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return resultsHTML;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Quotes API</h1>\r\n      {displayQuoteOfTheDay()}\r\n      <h2>Search for quotes that include:</h2>\r\n      <form>\r\n        <SearchByText\r\n          id={\"searchByAuthor\"}\r\n          onChangeHandler={getSearchValue}\r\n          searchValue={searchValue}\r\n        />\r\n      </form>\r\n      <div>{displayResults()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quotes;\r\n","function getAvatars(searchText, searchType, background = \"\") {\r\n  return fetch(\r\n    `https://avatars.dicebear.com/api/${searchType}/${searchText}.svg${background}`\r\n  ).then((response) => response);\r\n}\r\n\r\nexport default getAvatars;\r\n","import React from \"react\";\r\n\r\nfunction SearchByDropDown(props) {\r\n  // console.log(props);\r\n  const {\r\n    dropdownOptions,\r\n    id,\r\n    onChangeHandler,\r\n    dropdownValue,\r\n    labelText,\r\n  } = props;\r\n\r\n  // const dropdownsHTML = dropdownOptions.map((optionValue, index) => {\r\n  //   return (\r\n  //     <option key={index} value={optionValue.value}>\r\n  //       {optionValue.text}\r\n  //     </option>\r\n  //   );\r\n  // });\r\n  function onChangeHandlerChild(event) {\r\n    onChangeHandler({\r\n      key: event.currentTarget.id,\r\n      value: event.currentTarget.value,\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>{labelText}</label>\r\n      <select\r\n        name={id}\r\n        id={id}\r\n        onChange={onChangeHandlerChild}\r\n        // defaultValue=\"\"\r\n        value={dropdownValue}\r\n      >\r\n        {dropdownOptions}\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchByDropDown;\r\n","import React from \"react\";\r\n\r\nfunction ColorPicker(props) {\r\n  const { labelName, onChangeHandler, colorPickerValue } = props;\r\n  return (\r\n    <label htmlFor={labelName}>\r\n      {labelName}\r\n      <input\r\n        type=\"color\"\r\n        id={labelName}\r\n        value={colorPickerValue}\r\n        onChange={(event) =>\r\n          onChangeHandler(event.currentTarget.id, event.currentTarget.value)\r\n        }\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\n\r\nfunction Slider() {\r\n  return <input type=\"range\" />;\r\n}\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport ColorPicker from \"./editor-options/ColorPicker\";\r\nimport Slider from \"./editor-options/Slider\";\r\n\r\nfunction Editor(props) {\r\n  const { onChangeHandler, colorPickerValue } = props;\r\n  return (\r\n    <>\r\n      <ColorPicker\r\n        labelName=\"Background\"\r\n        onChangeHandler={onChangeHandler}\r\n        colorPickerValue={colorPickerValue}\r\n      />\r\n      <Slider />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport getAvatars from \"../services/getAvatars\";\r\nimport SearchByText from \"./reusables/filters/SearchByText\";\r\nimport SearchByDropDown from \"./reusables/filters/SearchByDropDown\";\r\nimport Editor from \"./reusables/Editor\";\r\n\r\nfunction Avatars() {\r\n  const [avatarUrl, setAvatarUrl] = useState(\"\");\r\n  const [searchValue, setTextSearchValue] = useState(\"\");\r\n  const [avatarTypeValue, setDropdownValue] = useState(\"human\");\r\n  const [editorOptions, setEditorOptions] = useState({ Background: \"#ffffff\" });\r\n  const avatarList = [\r\n    { value: \"human\", text: \"human\" },\r\n    { value: \"male\", text: \"male\" },\r\n    { value: \"female\", text: \"female\" },\r\n    { value: \"bottts\", text: \"bottts\" },\r\n    { value: \"identicon\", text: \"identicon\" },\r\n    { value: \"avataaars\", text: \"avataaars\" },\r\n    { value: \"gridy\", text: \"gridy\" },\r\n    { value: \"initials\", text: \"initials\" },\r\n  ];\r\n  useEffect(() => {\r\n    const background = editorOptions.Background\r\n      ? `?b=%23${editorOptions.Background.substr(1)}`\r\n      : \"\";\r\n\r\n    getAvatars(searchValue, avatarTypeValue, background).then((data) => {\r\n      setAvatarUrl(data.url);\r\n    });\r\n  }, [searchValue, avatarTypeValue, editorOptions]);\r\n\r\n  const getSearchValue = (data) => {\r\n    if (data.key === \"searchByText\") {\r\n      setTextSearchValue(data.value);\r\n    }\r\n    if (data.key === \"searchByType\") {\r\n      setDropdownValue(data.value);\r\n    }\r\n  };\r\n  const buildDropdown = () => {\r\n    let optionsArray = [];\r\n    optionsArray = avatarList.map((option, index) => {\r\n      return (\r\n        <option key={index} value={option.value}>\r\n          {option.text}\r\n        </option>\r\n      );\r\n    });\r\n    return optionsArray;\r\n  };\r\n  const getEditorOptions = (id, value) => {\r\n    console.log(id, value);\r\n    setEditorOptions({ [id]: value });\r\n  };\r\n  console.log(editorOptions);\r\n  return (\r\n    <div>\r\n      <SearchByText\r\n        id={\"searchByText\"}\r\n        onChangeHandler={getSearchValue}\r\n        searchValue={searchValue}\r\n        placeholder=\"Your name or other text\"\r\n      />\r\n      <SearchByDropDown\r\n        id=\"searchByType\"\r\n        dropdownOptions={buildDropdown()}\r\n        onChangeHandler={getSearchValue}\r\n        dropdownValue={avatarTypeValue}\r\n      />\r\n      <div className=\"avatar-block\">\r\n        <h2>Your personalized avatar:</h2>\r\n        <img src={avatarUrl} alt=\"avatar\" className=\"avatar\" />\r\n      </div>\r\n      <Editor\r\n        onChangeHandler={getEditorOptions}\r\n        colorPickerValue={editorOptions.Background}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Avatars;\r\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Header from \"./Header\";\nimport Cats from \"./Cats\";\nimport Quotes from \"./Quotes\";\n// import Weather from \"./Weather\";\nimport Avatars from \"./Avatars\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/apis/cats/\">\n          <Cats />\n        </Route>\n        <Route exact path=\"/apis/quotes/\">\n          <Quotes />\n        </Route>\n        <Route exact path=\"/apis/avatars/\">\n          <Avatars />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.scss\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}